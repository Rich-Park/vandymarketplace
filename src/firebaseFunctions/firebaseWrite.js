// import { doc, addDoc, collection, batch } from "firebase/firestore";
import { db, storage } from "../firebaseConfig";
import { ref, uploadBytes, getDownloadURL } from "firebase/storage";
import { doc, writeBatch, collection } from "firebase/firestore";

export async function storeItemsSell(userId, form_item) {
  // 1. Generate a unique itemID
  const newItemRef = doc(collection(db, "items"));

  const itemID = newItemRef.id; // This is the unique ID generated by Firestore

  // 2. Create references for the user's ItemsToSell sub-collection with the same itemID
  const userRef = doc(db, "users", userId);
  const userItemRef = doc(userRef, "ItemsToSell", itemID);

  // 3. Upload images to Firebase storage and get the download URLs
  const imageURLs = [];
  for (const image of form_item.images) {
    const storageRef = ref(storage, `${userId}/${image.name}`);
    await uploadBytes(storageRef, image);
    const downloadURL = await getDownloadURL(storageRef);
    imageURLs.push(downloadURL);
  }

  // 4. Start a batched write
  const batchWrite = writeBatch(db);

  // Set data for the user's ItemsToSell sub-collection
  batchWrite.set(userItemRef, {
    ...form_item,
    imageURLs: imageURLs,
  });

  // Set minimal data for the items collection (or more data if needed)
  batchWrite.set(newItemRef, {
    userID: userId,
    likes: 0,
  });

  // Commit the batched write
  await batchWrite.commit();
}
